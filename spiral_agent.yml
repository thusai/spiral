# Spiral Agent Rules - LLM Guide for Roadmap Management
# Version: 1.0
# Purpose: Help AI agents assist users with Spiral roadmap tool effectively

metadata:
  tool: "spiral"
  description: "Git-native roadmap management tool"
  capabilities: ["milestone tracking", "commit automation", "roadmap visualization", "project management"]

# Core Workflow Understanding
workflows:
  development_flow:
    description: "Primary workflow - commit-driven roadmap management"
    typical_sequence:
      - "User has code changes ready to commit"
      - "Agent suggests: spiral commit 'descriptive message' --auto"
      - "Spiral auto-creates milestones from commit messages"
      - "Context is maintained across related commits"
      - "Milestones completed when appropriate"
    
  planning_flow:
    description: "Strategic planning and roadmap review"
    typical_sequence:
      - "Agent suggests: spiral show all (to see current state)"
      - "Identify gaps or next priorities"
      - "Create targeted milestones: spiral tui (for interactive)"
      - "Set working context: spiral context [milestone_id]"

# Decision Trees for Common User Requests

decision_trees:
  
  user_wants_to_commit:
    when: "User mentions committing code, saving changes, or has completed work"
    assess:
      - "If they describe what they did: suggest 'spiral commit [description] --auto'"
      - "If they're unclear: ask what they worked on, then suggest auto commit"
      - "If they mention a specific milestone: suggest 'spiral commit [milestone_id] --auto'"
    examples:
      - "I fixed the login bug - spiral commit 'Fix login bug - improved validation' --auto"
      - "I'm done with S4.1 - spiral commit S4.1 --auto"
  
  user_wants_roadmap_overview:
    when: "User asks about status, progress, roadmap, or 'what's next'"
    primary_action: "spiral show all"
    follow_up_options:
      - "If they want details on specific milestone: spiral show [milestone_id]"
      - "If they want to see subtasks: spiral subtasks [milestone_id]"
      - "If planning next steps: suggest spiral tui for interactive planning"
  
  user_wants_to_plan:
    when: "User mentions planning, creating milestones, or organizing work"
    recommended_approach: "spiral tui (interactive mode)"
    alternative: "Manual milestone creation via spiral commands"
    guidance: "TUI is best for planning sessions, commands for quick additions"
  
  user_has_multiple_projects:
    when: "User mentions different projects or contexts"
    check_first: "spiral projects (see configured projects)"
    actions:
      - "Switch project: spiral use [project_name]"
      - "Create new: spiral init [project_name]"
      - "Agent should ask which project context they want to work in"

# Command Usage Patterns

command_patterns:
  
  spiral_commit:
    purpose: "Commit code and track progress simultaneously"
    when_to_suggest:
      - "User has completed work"
      - "User mentions fixing, implementing, adding features"
      - "User wants to save and track progress"
    best_practices:
      - "Use --auto flag for milestone auto-creation"
      - "Descriptive messages help auto-milestone creation"
      - "Reference milestone IDs when completing specific work"
    examples:
      - "spiral commit 'Implement user authentication system' --auto"
      - "spiral commit 'Fix memory leak in data processor' --auto"
      - "spiral commit S3.2 --auto  # completing milestone S3.2"
  
  spiral_show:
    purpose: "Display roadmap status and progress"
    variants:
      - "spiral show all - full roadmap overview"
      - "spiral show [milestone_id] - specific milestone details"
      - "spiral show --status done - filter by status"
    when_to_suggest:
      - "User asks about progress or status"
      - "User needs to understand current roadmap state"
      - "Before making planning decisions"
  
  spiral_tui:
    purpose: "Interactive roadmap management"
    when_to_suggest:
      - "User wants to plan or reorganize"
      - "User needs to modify multiple milestones"
      - "User prefers visual/interactive interfaces"
      - "Complex roadmap planning sessions"
  
  spiral_context:
    purpose: "Set working context for subsequent commits"
    when_to_suggest:
      - "User will work on specific milestone across multiple commits"
      - "User wants to group related work"
    example: "spiral context S4.1  # all future commits relate to S4.1"

# Project Management Scenarios

scenarios:
  
  new_feature_development:
    user_intent: "Starting work on a new feature"
    agent_approach:
      - "Suggest: spiral commit 'Start [feature name]' --auto"
      - "This creates a new milestone automatically"
      - "Set context if they'll work on it across multiple sessions"
      - "Remind them to commit regularly with --auto for sub-milestones"
  
  bug_fixing:
    user_intent: "Fixing bugs or issues"
    agent_approach:
      - "Suggest specific commit messages: spiral commit 'Fix [specific bug]' --auto"
      - "For multiple related bugs: set context first with created milestone"
      - "Track each fix as separate commit to show granular progress"
  
  milestone_completion:
    user_intent: "Completing major milestones"
    agent_approach:
      - "Use: spiral commit [milestone_id] --auto"
      - "This marks milestone as done in roadmap"
      - "Suggest review: spiral show all to see updated status"
  
  roadmap_review:
    user_intent: "Understanding project status"
    agent_approach:
      - "Start with: spiral show all"
      - "Identify completed, in-progress, and planned work"
      - "Suggest next priorities based on roadmap gaps"
      - "Offer spiral tui for planning session if needed"
  
  project_switching:
    user_intent: "Working on different projects"
    agent_approach:
      - "Check current context: spiral projects"
      - "Switch if needed: spiral use [project_name]"
      - "Always confirm project context before other operations"

# Agent Communication Guidelines

communication:
  
  be_proactive:
    - "Suggest spiral commands based on user's described work"
    - "Offer roadmap views when user seems lost or planning"
    - "Recommend auto-commit workflow for regular development"
  
  provide_context:
    - "Explain why you're suggesting specific commands"
    - "Show what the command will do: 'This will create a new milestone for your feature'"
    - "Mention follow-up actions: 'After this commit, you can see progress with spiral show all'"
  
  handle_errors:
    - "If user gets errors, help debug with spiral show or project switching"
    - "Common issue: working in wrong project context"
    - "Common issue: trying to commit already-completed milestones"
  
  encourage_workflow:
    - "Promote commit-first workflow: 'Commit your changes and let Spiral track the roadmap'"
    - "Suggest regular spiral show all to maintain roadmap awareness"
    - "Encourage descriptive commit messages for better auto-milestone creation"

# Integration Patterns

integration:
  
  with_git:
    understanding: "Spiral builds on git - every spiral commit is a real git commit"
    implications:
      - "Commits are permanent and trackable"
      - "Milestone completion is verified against git history"
      - "Roadmap reflects actual development progress"
  
  with_development_flow:
    natural_points:
      - "After coding session: spiral commit with --auto"
      - "Before starting new work: spiral show all to orient"
      - "During planning: spiral tui for interactive roadmap management"
      - "Weekly reviews: spiral show all to assess progress"
  
  multi_project_environments:
    considerations:
      - "Always confirm project context first"
      - "Each project has independent roadmap and schema"
      - "Project switching is common in development workflows"

# Error Prevention

common_mistakes:
  - "Forgetting --auto flag (manual milestone creation is harder)"
  - "Working in wrong project context"
  - "Trying to commit already-completed milestones"
  - "Not using descriptive commit messages (hurts auto-milestone quality)"

agent_checklist:
  before_suggesting_commands:
    - "Understand what user accomplished or wants to do"
    - "Confirm project context if user works on multiple projects"
    - "Choose most appropriate spiral command for their intent"
  
  after_command_execution:
    - "Suggest follow-up actions like spiral show all to see results"
    - "Encourage continued use of the commit-driven workflow"
    - "Offer planning help if they seem uncertain about next steps"

# Success Patterns

user_success_indicators:
  - "Regular commits with spiral commit --auto"
  - "Uses spiral show all to maintain roadmap awareness"  
  - "Leverages spiral tui for planning sessions"
  - "Maintains clear milestone progression"
  - "Commits reflect actual development work"

agent_success_indicators:
  - "User adopts commit-driven roadmap workflow"
  - "User's roadmap stays current with actual development"
  - "User feels confident navigating between development and planning"
  - "User effectively manages multiple projects if applicable" 